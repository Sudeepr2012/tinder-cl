{"version":3,"sources":["Header.js","axios.js","Cards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","Cards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","console","log","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAsBeA,MAjBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACA,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAGvC,qBAAKA,UAAU,eAAeG,IAAI,mEAClCC,IAAI,KAGJ,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,kECXvCK,E,OAJCC,EAAMC,OAAO,CACzBC,QAAS,kDC8CEC,MA5Cf,WACI,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAqBA,OAnBAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACqBR,EAAMS,IAAI,gBAD/B,OACUC,EADV,OAGIJ,EAAUI,EAAIC,MAHlB,4CADY,uBAAC,WAAD,wBAOZC,KACF,IACFC,QAAQC,IAAIT,GAWR,qBAAKX,UAAU,QAAf,SACI,qBAAMA,UAAU,iBAAhB,SACKW,EAAOU,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CAAYtB,UAAU,QAElBuB,aAAc,CAAC,KAAK,QACpBC,QAAS,SAACC,GAAD,OAfJC,EAeyBJ,EAAOK,UAdrDR,QAAQC,IAAI,WAAaM,GADf,IAAWA,GAgBLE,iBAAkB,kBAXlBD,EAWmCL,EAAOK,UAV1DR,QAAQC,IAAIO,EAAO,oBADJ,IAACA,GAOJ,SAMQ,qBAAKE,MAAO,CAAEC,gBAAiB,OAASR,EAAOS,OAAS,KACxD/B,UAAU,OADV,SAEI,6BAAKsB,EAAOK,UAPfL,EAAOK,c,6FCHrBK,MAnBf,WACI,OACI,sBAAKhC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YACX,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACT,cAAC,IAAD,CAAcE,SAAS,YACd,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACT,cAAC,IAAD,CAAcE,SAAS,YACd,cAACD,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACT,cAAC,IAAD,CAAaE,SAAS,gBCNvB+B,MAXf,WACE,OAEE,cADA,CACA,OAAKjC,UAAU,MAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCAUkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.089c88fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Header.css\"\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nfunction Header(){\r\n    return (\r\n        <div className=\"header\">\r\n            <IconButton>\r\n            <PersonIcon fontSize=\"large\" className=\"header__icon\" />\r\n            </IconButton>\r\n\r\n            <img className=\"header__logo\" src=\"https://1000logos.net/wp-content/uploads/2018/07/Tinder-logo.png\"\r\n            alt='' \r\n            />\r\n\r\n            <IconButton>\r\n                <ForumIcon fontSize=\"large\" className=\"header__icon\"/>\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\nexport default Header","import axios from 'axios';\r\n\r\nconst instance =axios.create({\r\n    baseURL: 'https://tinder-clone-backend009.herokuapp.com',\r\n});\r\n\r\nexport default instance;","import React,{ useEffect, useState } from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport './Cards.css'\r\nimport axios from \"./axios\"\r\n\r\nfunction Cards(){\r\n    const [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const req= await axios.get(\"/tinder/card\");\r\n\r\n            setPeople(req.data);\r\n        }\r\n\r\n        fetchData();\r\n    },[])\r\n    console.log(people);\r\n\r\n    const swiped= (direction,nameToDelete) => {\r\n        console.log(\"removing\" + nameToDelete);\r\n        //setLastDirection(direction);\r\n    }\r\n\r\n    const outOfFrame = (name) =>{\r\n        console.log(name + \"left the screen!\")\r\n    }\r\n    return(\r\n        <div className=\"cards\">\r\n            <div  className=\"card-container\">\r\n                {people.map((person) => (\r\n                    <TinderCard className=\"swipe\"\r\n                        key={person.name}\r\n                        preventSwipe={[\"up\",\"down\"]}\r\n                        onSwipe={(dir) => swiped(dir, person.name)}\r\n                        onCardLeftScreen={() => outOfFrame(person.name)}\r\n                        >\r\n                            <div style={{ backgroundImage: \"url(\" + person.imgUrl + \")\"}}\r\n                            className=\"card\">\r\n                                <h3>{person.name}</h3>\r\n                            </div>\r\n                        \r\n                    </TinderCard>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Cards","import React from \"react\";\r\nimport './SwipeButtons.css';\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n\r\nfunction SwipeButtons(){\r\n    return(\r\n        <div className=\"swipeButtons\">\r\n            <IconButton className=\"swipeButtons__repeat\">\r\n                <ReplayIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__left\">\r\n                <CloseIcon fontSize=\"large\" />\r\n            </IconButton><IconButton className=\"swipeButtons__star\">\r\n                <StarRateIcon fontSize=\"large\" />\r\n            </IconButton><IconButton className=\"swipeButtons__right\">\r\n                <FavoriteIcon fontSize=\"large\" />\r\n            </IconButton><IconButton className=\"swipeButtons__lightning\">\r\n                <FlashOnIcon fontSize=\"large\" />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons","import React from 'react';\nimport './App.css';\nimport Header from \"./Header\";\nimport Cards from \"./Cards\";\nimport SwipeButtons from \"./SwipeButtons\";\n\nfunction App() {\n  return (\n    //BEM naming convention\n    <div className=\"app\">\n     <Header />\n     <Cards />\n     <SwipeButtons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}